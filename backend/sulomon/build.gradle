plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.jetbrains.kotlin.jvm" version '1.9.22'
	id "org.jetbrains.kotlin.plugin.spring" version '1.9.22'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// redis (valkey)
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// flyway
	//  MAJOR.MINOR.PATCH (SemVer)
	implementation 'org.flywaydb:flyway-mysql:10.17.3'

	// JWT 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test'
	testImplementation 'io.kotest:kotest-runner-junit5:5.9.1'
	testImplementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'io.mockk:mockk:1.13.12'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = '17'
	}
}

sourceSets {
	test {
		java {
			setSrcDirs(['src/test/kotlin'])
		}
	}
}